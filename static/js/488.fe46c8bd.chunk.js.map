{"version":3,"file":"static/js/488.fe46c8bd.chunk.js","mappings":"sQACA,EAA6B,+BAA7B,EAAqE,2BAArE,EAA2G,6BAA3G,EAAgJ,0BAAhJ,EAAiL,yBAAjL,EAAiN,yBAAjN,EAAiP,yBAAjP,EAAkR,0B,mBCmB5QA,EAAa,SAAC,GAAwE,IAAvEC,EAAsE,EAAtEA,WAAYC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,aACrDC,GAAkBC,EAAAA,EAAAA,IAAkBC,EAAAA,IACpCC,GAAqBF,EAAAA,EAAAA,IAAkBG,EAAAA,IAC7C,GAA4CC,EAAAA,EAAAA,IAAeC,EAAAA,IAA3D,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAmBC,EAAAA,EAAAA,IAAeC,EAAAA,IAEjCC,EAAqChB,EAArCgB,OAAQC,EAA6BjB,EAA7BiB,MAAOC,EAAsBlB,EAAtBkB,KAAMC,EAAgBnB,EAAhBmB,KAAMC,EAAUpB,EAAVoB,QAElCC,EAAAA,EAAAA,YAAU,WACM,WAAVnB,EACFW,EAAiBS,SAAQ,SAACC,GAAD,cACzBpB,QADyB,IACzBA,OADyB,EACzBA,EAAcmB,SAAQ,SAACE,GAAD,OACtBC,KAAKC,UAAUF,KAASC,KAAKC,UAAUH,IAAaX,GAAkB,SAACe,GAAD,wBAAmBA,GAAnB,CAA8BJ,EAASH,kBAE7GR,EAAkBC,EAAiBe,KAAI,SAACC,GAAD,OAASA,EAAIT,aAEtD,CAACjB,EAAcU,EAAkBD,EAAmBV,IAQtD,OACE,wCACE4B,UAAWC,EACXC,IAAG,OAAEjC,QAAF,IAAEA,OAAF,EAAEA,EAAYkC,UAFnB,OAGMlC,QAHN,IAGMA,OAHN,EAGMA,EAAYmC,gBAHlB,OAIMnC,QAJN,IAIMA,OAJN,EAIMA,EAAYoC,iBAJlB,IAKEC,QAAS,kBAZaC,EAYUrC,EAXlCC,GAAa,QACC,WAAVC,EAAoBE,EAAgBiC,GACnC9B,EAAmB8B,IAHD,IAACA,GAatB,iBANF,WAQE,gBAAKC,IAAgB,QAAXtB,EAAA,UAAsBuB,kBAAtB,qBAAkEvB,EAAQc,UAAWC,EAAeS,IAAI,kBAClH,iBAAKV,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SAA+Bd,KAC/B,iBAAMa,UAAWC,EAAjB,SAA+Bb,IAFjC,MAE+C,iBAAMY,UAAWC,EAAjB,SAA+BZ,KAC5E,gBAAKW,UAAWW,GAAAA,CAAGV,GAAD,UAAiBA,GAAoD,KAAvB,OAAdpB,QAAc,IAAdA,OAAA,EAAAA,EAAgB+B,QAAQtB,MAA1E,UACE,SAAC,IAAD,CAAiBuB,KAAMC,EAAAA,gBAOjC,EAAeC,EAAAA,KAAW/C","sources":["webpack://foundation-ts/./src/components/MovieCards/movieCards.module.scss?cae0","components/MovieCards/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"eachResult\":\"movieCards_eachResult__OKAxl\",\"poster\":\"movieCards_poster__r+bM5\",\"contents\":\"movieCards_contents__kzLnp\",\"title\":\"movieCards_title__OpBp5\",\"year\":\"movieCards_year__O7J9n\",\"type\":\"movieCards_type__HXb9R\",\"icon\":\"movieCards_icon__bM20W\",\"heart\":\"movieCards_heart__FYyAS\"};","import React, { Dispatch, SetStateAction, useEffect } from 'react'\r\nimport {useRecoilValue, useSetRecoilState, useRecoilState} from 'recoil'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\"\r\nimport cx from 'classnames'\r\n\r\nimport styles from './movieCards.module.scss'\r\nimport {ClickedMovieDataAtom, ClickedBookMarkDataAtom, BookMarkIdListAtom, BookMarkListAtom} from '../../utils/atom' \r\nimport { IMovieData } from 'types/movie'\r\nimport noImg from '../../img/not-available.png'\r\n\r\n\r\ninterface CardsProps {\r\n  movie: IMovieData\r\n  setOpenModal: Dispatch<SetStateAction<boolean>>\r\n  state: string\r\n  handleDrag?: any\r\n  apiMovieData?: IMovieData[] | undefined\r\n}\r\n\r\nconst MovieCards = ({handleDrag, movie, setOpenModal, state, apiMovieData} :CardsProps) => {\r\n  const setClickedMovie = useSetRecoilState(ClickedMovieDataAtom)\r\n  const setClickedBookmark = useSetRecoilState(ClickedBookMarkDataAtom)\r\n  const [bookmarkIdList, setBookmarkIdList] = useRecoilState(BookMarkIdListAtom)\r\n  const bookmarkedMovies = useRecoilValue(BookMarkListAtom)\r\n\r\n  const {Poster, Title, Type, Year, imdbID} = movie\r\n\r\n  useEffect(() => {\r\n    if (state === 'search'){\r\n      bookmarkedMovies.forEach((bookmark) => \r\n      apiMovieData?.forEach((api) => \r\n      JSON.stringify(api) === JSON.stringify(bookmark) && setBookmarkIdList((prevState) => [...prevState, bookmark.imdbID])))\r\n    } else {\r\n      setBookmarkIdList(bookmarkedMovies.map((ele) => ele.imdbID))\r\n    }\r\n  },[apiMovieData, bookmarkedMovies, setBookmarkIdList, state])\r\n\r\n  const handleMovieClick = (data: IMovieData) => {\r\n    setOpenModal(true)\r\n    if (state === 'search') setClickedMovie(data)\r\n    else setClickedBookmark(data)\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={styles.eachResult}\r\n      ref={handleDrag?.innerRef}\r\n      {...handleDrag?.draggableProps}\r\n      {...handleDrag?.dragHandleProps}\r\n      onClick={() => handleMovieClick(movie)}\r\n      aria-hidden\r\n    >\r\n      <img src={Poster === 'N/A' ? `${process.env.PUBLIC_URL}not-available.png` : Poster} className={styles.poster} alt='movie poster' />\r\n      <div className={styles.contents}>\r\n        <div className={styles.title}>{Title}</div>\r\n        <span className={styles.type}>{Type}</span> |<span className={styles.year}>{Year}</span>\r\n        <div className={cx(styles.icon, { [styles.heart]: bookmarkIdList?.indexOf(imdbID) !== -1 })}>\r\n          <FontAwesomeIcon icon={faHeart} />\r\n        </div>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default React.memo(MovieCards)\r\n"],"names":["MovieCards","handleDrag","movie","setOpenModal","state","apiMovieData","setClickedMovie","useSetRecoilState","ClickedMovieDataAtom","setClickedBookmark","ClickedBookMarkDataAtom","useRecoilState","BookMarkIdListAtom","bookmarkIdList","setBookmarkIdList","bookmarkedMovies","useRecoilValue","BookMarkListAtom","Poster","Title","Type","Year","imdbID","useEffect","forEach","bookmark","api","JSON","stringify","prevState","map","ele","className","styles","ref","innerRef","draggableProps","dragHandleProps","onClick","data","src","process","alt","cx","indexOf","icon","faHeart","React"],"sourceRoot":""}